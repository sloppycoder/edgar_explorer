substitutions:
  _REGION: "us-central1"
  _RUNTIME: "python312"
  _IMAGE_NAME: "edgar-explorer"
  _EXTRACTION_RESULT_COLLECTION: "extraction_result"
  _DEBUG: "0"
  _SERVICE_ACCOUNT: "edgar-dev@edgar-ai.iam.gserviceaccount.com"
  _SERVICE_ACCOUNT_CREDENTIAL_SECRET: "edgar-ui-user-key"
  _APP_CONFIG_SECRET: "edgar-ui-config"

options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Step 1: Install dev dependencies and run tests
  - name: "python:3.12"
    id: "Install dependencies"
    entrypoint: bash
    args:
      - "-c"
      - |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        python -m pytest -v

  # Step 2: Build the Docker image
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/${_IMAGE_NAME}", "."]

  # Step 3: Push the Docker image to Google Container Registry (GCR)
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/${_IMAGE_NAME}"]

  # Step 4: Deploy to Cloud Run with secrets and environment variables
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "${_IMAGE_NAME}"
      - "--image=gcr.io/$PROJECT_ID/${_IMAGE_NAME}"
      - "--region=${_REGION}"
      - "--platform=managed"
      - "--allow-unauthenticated"
      - "--port=8000"
      - "--service-account"
      - "${_SERVICE_ACCOUNT}"
      - "--cpu=1"
      - "--memory=1Gi"
      - "--update-secrets=GOOGLE_APPLICATION_CREDENTIALS_JSON=${_SERVICE_ACCOUNT_CREDENTIAL_SECRET}:latest"
      - "--update-secrets=/secrets/app_config.env=${_APP_CONFIG_SECRET}:latest"
      - "--set-env-vars=EXTRACTION_RESULT_COLLECTION=${_EXTRACTION_RESULT_COLLECTION},DEBUG=${_DEBUG}"

images:
  - "gcr.io/$PROJECT_ID/${_IMAGE_NAME}"
